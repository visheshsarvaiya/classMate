import type { Request, Response } from "express";
import { type Writable } from "stream";
export type LedgerDetails = LedgerDirectoryDetails & {
    blockId: string;
};
export type LedgerDirectoryDetails = {
    ledgerId: string;
    configurationId: string;
    cacheId: string;
};
export declare function makeLedgerFilePath(details: LedgerDetails | LedgerDirectoryDetails): string;
export declare function getIdFromLedgerFilePath(filePath: string): string;
export declare function parseStringHeader(headers: Request["headers"], names: string | string[]): string;
export declare function makeLedgerWriteHandler({ getWritableStream, }: {
    getWritableStream: (ledgerDetails: LedgerDetails) => Promise<Writable> | Writable;
}): (req: Request, res: Response) => Promise<Response<any, Record<string, any>>>;
//# sourceMappingURL=base-handler.d.ts.map