import { Store } from "redux";
import { ThunkAction, ThunkDispatch } from "redux-thunk";
import { IGatsbyState, ActionsUnion } from "./types";
export declare const emitter: any;
export declare const readState: any;
export interface IMultiDispatch {
    <T extends ActionsUnion | ThunkAction<any, IGatsbyState, any, ActionsUnion>>(action: Array<T>): Array<T>;
}
export type GatsbyReduxStore = Store<IGatsbyState> & {
    dispatch: ThunkDispatch<IGatsbyState, any, ActionsUnion> & IMultiDispatch;
};
export declare const configureStore: any;
export declare const store: GatsbyReduxStore;
/**
 * Allows overloading some reducers (e.g. when setting a custom datastore)
 */
export declare const replaceReducer: any;
export declare const saveState: any;
export declare const savePartialStateToDisk: any;
export declare const loadPartialStateFromDisk: any;
//# sourceMappingURL=index.d.ts.map