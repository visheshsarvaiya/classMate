"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.md5File = void 0;
const hash_wasm_1 = require("hash-wasm");
const fs = __importStar(require("fs-extra"));
/**
 * Create a MD5 hash from a given filePath
 * @param filePath Absolute path to the file
 * @returns MD5 hash in hex format
 */
const md5File = async (filePath) => {
    const md5hasher = await (0, hash_wasm_1.createMD5)();
    return new Promise((resolve, reject) => {
        md5hasher.init();
        const fileInput = fs.createReadStream(filePath);
        fileInput.on(`error`, (err) => {
            reject(err);
        });
        fileInput.on(`data`, (data) => {
            md5hasher.update(data);
        });
        fileInput.on(`end`, () => {
            resolve(md5hasher.digest(`hex`));
        });
    });
};
exports.md5File = md5File;
//# sourceMappingURL=md5-file.js.map