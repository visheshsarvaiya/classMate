"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.activityTick = exports.setActivityTotal = exports.setActivityStatusText = exports.setActivityErrored = exports.updateActivity = exports.endActivity = exports.startActivity = exports.setStatus = exports.createPendingActivity = exports.createLog = void 0;
const redux_1 = require("redux");
const _1 = require(".");
const actions = __importStar(require("./internal-actions"));
const boundActions = (0, redux_1.bindActionCreators)(actions, _1.dispatch);
exports.createLog = boundActions.createLog;
exports.createPendingActivity = boundActions.createPendingActivity;
exports.setStatus = boundActions.setStatus;
exports.startActivity = boundActions.startActivity;
exports.endActivity = boundActions.endActivity;
exports.updateActivity = boundActions.updateActivity;
exports.setActivityErrored = boundActions.setActivityErrored;
exports.setActivityStatusText = boundActions.setActivityStatusText;
exports.setActivityTotal = boundActions.setActivityTotal;
exports.activityTick = boundActions.activityTick;
//# sourceMappingURL=actions.js.map