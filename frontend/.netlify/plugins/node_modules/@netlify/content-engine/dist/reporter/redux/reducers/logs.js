"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.reducer = void 0;
const constants_1 = require("../../constants");
const reducer = (state = {
    activities: {},
    status: ``,
}, action) => {
    switch (action.type) {
        case constants_1.Actions.SetStatus: {
            return {
                ...state,
                status: action.payload,
            };
        }
        case constants_1.Actions.StartActivity: {
            const { id } = action.payload;
            return {
                ...state,
                activities: {
                    ...state.activities,
                    [id]: action.payload,
                },
            };
        }
        case constants_1.Actions.UpdateActivity:
        case constants_1.Actions.PendingActivity: {
            const { id, ...rest } = action.payload;
            const activity = state.activities[id];
            return {
                ...state,
                activities: {
                    ...state.activities,
                    [id]: {
                        ...activity,
                        id,
                        ...rest,
                    },
                },
            };
        }
        case constants_1.Actions.ActivityErrored: {
            const { id } = action.payload;
            const activity = state.activities[id];
            return {
                ...state,
                activities: {
                    ...state.activities,
                    [id]: {
                        ...activity,
                        errored: true,
                    },
                },
            };
        }
        case constants_1.Actions.EndActivity:
        case constants_1.Actions.CancelActivity: {
            const { id, status, duration } = action.payload;
            const activity = state.activities[id];
            if (!activity) {
                return state;
            }
            const activities = { ...state.activities };
            activities[id] = {
                ...activity,
                status,
                duration,
            };
            return {
                ...state,
                activities,
            };
        }
        case constants_1.Actions.SetLogs: {
            return action.payload;
        }
    }
    return state;
};
exports.reducer = reducer;
//# sourceMappingURL=logs.js.map