export const handler = (path, config) => `import { extension } from '${path}';
extension._slug = '${config.slug}';
${config.hostSiteId ? `extension._hostSiteId = '${config.hostSiteId}';` : ""}
export const handler = extension.baseHandler;`;
export const netlifyToml = () => `[build]
command = "netlify-extension build"
publish = ".ntli/site/static"

[dev]
command = "netlify-extension dev"

[functions]
directory = "src/endpoints"

[[plugins]]
package = "@netlify/netlify-plugin-netlify-extension"
`;
// TODO(serhalp) To avoid futzing with whitespace, consider either building this
// programmatically and then formatting as YAML or running prettier on it post-hoc.
export const extensionConfig = ({ slug = "", name = "", description, parsedScopes, surfaces, }) => `# yaml-language-server: $schema=https://developers.netlify.com/sdk/config-schema.json
config:
  slug: ${slug.trim() !== "" ? slug.trim() : "new-extension"}
  name: ${name.trim() !== "" ? name.trim() : "new-extension"}\
${description ? `\n  description: ${description}` : ""}\
${parsedScopes ? `\n  ${parsedScopes}` : ""}
  # set this to true to add a global require shim to esbuild. Workaround for https://github.com/evanw/esbuild/issues/1921
  use_cjs_shims: false\
${surfaces.length > 0
    ? `

  ui:
    surfaces:
${surfaces.map((surface) => `      - ${surface}`).join("\n")}`
    : ""}`;
//# sourceMappingURL=handler.js.map