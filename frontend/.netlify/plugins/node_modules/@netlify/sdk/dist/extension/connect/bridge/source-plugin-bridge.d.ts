import type { NodePluginArgs, PluginOptions, CreateSchemaCustomizationArgs, SourceNodesArgs, CreateResolversArgs } from "@netlify/content-engine";
import { BridgePluginAPI } from "./bridge.js";
export declare class SourcePluginBridgeAPI extends BridgePluginAPI {
    contentEngineCache?: Cache;
    onPluginInit(helpers: NodePluginArgs, pluginOptions: PluginOptions): Promise<void>;
    createResolvers({ createResolvers, emitter, store, }: CreateResolversArgs): void;
    /**
     * content-engine / Gatsby API - will be called by internal source plugin
     */
    createSchemaCustomization(schemaCustomizationApi: CreateSchemaCustomizationArgs): Promise<void>;
    sourceNodes(args: SourceNodesArgs, options: PluginOptions): Promise<unknown>;
}
export interface Cache {
    get<T = unknown>(key: string): Promise<T>;
    set<T = unknown>(key: string, value: T): Promise<void>;
    delete(key: string): Promise<void>;
}
//# sourceMappingURL=source-plugin-bridge.d.ts.map