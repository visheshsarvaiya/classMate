import { ContentEngineConfiguration } from "@netlify/content-engine";
import type { ExtensionWorkerManager } from "../../cli/worker/manager.js";
import { NetlifyExtension } from "../index.js";
import { ExtensionConfiguration } from "../../extension_configuration/main.js";
export type CreateConnectorTemplateData = {
    extensionImportPath: string;
    configSlug: string;
    addContentEngineConfig: boolean;
};
export declare function createDevelopmentContentEngine({ extension, cwd, engineOptions, forceRunVisualEditor, }: {
    extension: NetlifyExtension;
    cwd: string;
    engineOptions?: ContentEngineConfiguration;
    forceRunVisualEditor?: boolean;
}): Promise<{
    engine: import("@netlify/content-engine").ContentEngine;
}>;
export declare const generateConnectPlugin: (extensionWorker: ExtensionWorkerManager, config: ExtensionConfiguration, opts: {
    cwd: string;
    outDir: string;
    watchMode?: boolean;
    importedNodeModules?: Set<string>;
}) => Promise<void>;
//# sourceMappingURL=cli.d.ts.map