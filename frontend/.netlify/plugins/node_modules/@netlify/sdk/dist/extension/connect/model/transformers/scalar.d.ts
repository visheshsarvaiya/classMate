import { ModelTransformer, ModelTransformerImplementation, ModelTreeContext } from "../transformer.js";
import { Editor } from "../types.js";
import { ResolvedModelField } from "../definition.js";
export declare class ScalarBaseTransformer extends ModelTransformer implements ModelTransformerImplementation {
    toConnectSingleFieldDefinition(modelField: ResolvedModelField): string;
    toConnectListFieldDefinition(modelField: ResolvedModelField): string;
    toConnectDefinition(): string;
    toCreateDefinition(): null;
    toConnectSingleFieldValue(input: unknown): unknown;
    toConnectListFieldValue(input: unknown): unknown;
    protected get visualEditorFieldType(): EditorDocumentScalarFieldLocalized["type"];
    toCreateSingleFieldValue(input: any): EditorDocumentScalarFieldNonLocalized;
    toCreateSingleFieldValueLocalized(input: Record<string, any>, _field: ResolvedModelField, treeContext: ModelTreeContext): EditorDocumentScalarFieldLocalized;
    toCreateListFieldValue(input: any[]): Editor.DocumentListFieldNonLocalized;
    parseVisitedInputList(input: unknown, field: ResolvedModelField, treeContext: ModelTreeContext): unknown;
}
export type EditorDocumentScalarFieldNonLocalized = Editor.DocumentStringLikeFieldNonLocalized | Editor.DocumentNumberFieldNonLocalized | Editor.DocumentBooleanFieldNonLocalized | Editor.DocumentJsonFieldNonLocalized | Editor.DocumentStyleFieldNonLocalized | Editor.DocumentRichTextFieldNonLocalized;
export type EditorDocumentScalarFieldLocalized = Editor.DocumentStringLikeFieldLocalized | Editor.DocumentNumberFieldLocalized | Editor.DocumentBooleanFieldLocalized | Editor.DocumentJsonFieldLocalized | Editor.DocumentStyleFieldLocalized | Editor.DocumentRichTextFieldLocalized;
//# sourceMappingURL=scalar.d.ts.map