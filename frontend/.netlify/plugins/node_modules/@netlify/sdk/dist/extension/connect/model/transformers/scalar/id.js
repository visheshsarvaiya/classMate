import { StringTransformer } from "./string.js";
// NOTE: this is used for the main id: ID! field on document types, but it's also used for any user-defined field of type ID
// also, for now ID is handled exactly like a string. In the future we could add additional transformations or validations here.
export class IDTransformer extends StringTransformer {
    // @ts-ignore we've been returning id: ID field in this non-stackbit compatible format for a long time.
    // it's used as the record ID in lmdb
    // TODO: there's a better way to do this
    toCreateSingleFieldValue(input) {
        return input;
    }
    toCreateSingleFieldDefinition() {
        // TODO: ID type fields should be allowed, we really only want to remove the field definition for any Document.id
        return null; // strip all ID type fields out - this is what we were doing before the transformer refactor
    }
    get visualEditorFieldType() {
        return "string";
    }
}
//# sourceMappingURL=id.js.map