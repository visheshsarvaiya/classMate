export const lmdbStoredDocumentToStackbit = (storedDocument, model) => {
    const { ...fields } = storedDocument;
    return {
        id: fields._objectId.value,
        type: `document`,
        modelName: model.getOriginalName(),
        context: {},
        updatedAt: fields._updatedAt.value,
        createdAt: fields._createdAt.value,
        status: fields._status.value,
        locale: fields._locale?.value,
        createdBy: fields._createdBy?.value,
        updatedBy: fields._updatedBy?.value,
        manageUrl: fields._manageUrl?.value,
        fields,
    };
};
export const lmdbStoredAssetToStackbit = (assetNode) => {
    // @ts-ignore - we know it's a StackbitFormattedLMDBAsset - this is tech debt
    const storedAsset = assetNode;
    return {
        type: `asset`,
        id: storedAsset._objectId.value,
        _connectId: storedAsset.id,
        updatedAt: storedAsset._updatedAt.value,
        createdAt: storedAsset._createdAt.value,
        updatedBy: storedAsset._updatedBy?.value,
        createdBy: storedAsset._createdBy?.value,
        locale: storedAsset._locale?.value,
        manageUrl: storedAsset._manageUrl?.value,
        fields: {
            title: storedAsset.title,
            file: {
                type: `assetFile`,
                url: storedAsset.url.value,
                dimensions: {
                    width: storedAsset.width?.value,
                    height: storedAsset.height?.value,
                },
            },
        },
        status: storedAsset._status.value,
        context: {},
    };
};
export const lmdbStoredScheduledActionToStackbit = (document) => {
    const { ...fields } = document;
    return {
        id: fields._objectId.value,
        action: fields.action.value,
        createdAt: fields._createdAt?.value,
        createdBy: fields._createdBy?.value,
        documentIds: fields.documentIds.items.map(({ value }) => value),
        executeAt: fields.executeAt.value,
        name: fields.name.value,
        state: fields.state.value,
    };
};
//# sourceMappingURL=data.js.map