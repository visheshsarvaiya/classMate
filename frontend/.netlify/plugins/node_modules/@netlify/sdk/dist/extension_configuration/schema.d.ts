import { Surfaces } from "@netlify/sdk--ui-core";
import { z } from "zod";
export declare const ExtensionConfigurationSchema: z.ZodObject<{
    name: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    slug: z.ZodString;
    hostSiteId: z.ZodOptional<z.ZodString>;
    scopes: z.ZodOptional<z.ZodObject<{
        all: z.ZodOptional<z.ZodBoolean>;
        site: z.ZodOptional<z.ZodArray<z.ZodEnum<["read", "write"]>, "many">>;
        env: z.ZodOptional<z.ZodArray<z.ZodEnum<["read", "write", "delete"]>, "many">>;
        user: z.ZodOptional<z.ZodArray<z.ZodEnum<["read", "write"]>, "many">>;
    }, "strip", z.ZodTypeAny, {
        user?: ("read" | "write")[] | undefined;
        env?: ("delete" | "read" | "write")[] | undefined;
        all?: boolean | undefined;
        site?: ("read" | "write")[] | undefined;
    }, {
        user?: ("read" | "write")[] | undefined;
        env?: ("delete" | "read" | "write")[] | undefined;
        all?: boolean | undefined;
        site?: ("read" | "write")[] | undefined;
    }>>;
    use_cjs_shims: z.ZodOptional<z.ZodBoolean>;
    connector: z.ZodOptional<z.ZodObject<{
        "local-frontend": z.ZodOptional<z.ZodObject<{
            port: z.ZodNumber;
            command: z.ZodString;
            directory: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            port: number;
            command: string;
            directory: string;
        }, {
            port: number;
            command: string;
            directory: string;
        }>>;
    }, "strip", z.ZodTypeAny, {
        "local-frontend"?: {
            port: number;
            command: string;
            directory: string;
        } | undefined;
    }, {
        "local-frontend"?: {
            port: number;
            command: string;
            directory: string;
        } | undefined;
    }>>;
    ui: z.ZodOptional<z.ZodObject<{
        build: z.ZodOptional<z.ZodObject<{
            command: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            command?: string | undefined;
        }, {
            command?: string | undefined;
        }>>;
        dev: z.ZodOptional<z.ZodObject<{
            command: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            command?: string | undefined;
        }, {
            command?: string | undefined;
        }>>;
        surfaces: z.ZodOptional<z.ZodEffects<z.ZodArray<z.ZodNativeEnum<typeof Surfaces>, "many">, Surfaces[], Surfaces[]>>;
    }, "strip", z.ZodTypeAny, {
        build?: {
            command?: string | undefined;
        } | undefined;
        dev?: {
            command?: string | undefined;
        } | undefined;
        surfaces?: Surfaces[] | undefined;
    }, {
        build?: {
            command?: string | undefined;
        } | undefined;
        dev?: {
            command?: string | undefined;
        } | undefined;
        surfaces?: Surfaces[] | undefined;
    }>>;
}, "strip", z.ZodTypeAny, {
    slug: string;
    connector?: {
        "local-frontend"?: {
            port: number;
            command: string;
            directory: string;
        } | undefined;
    } | undefined;
    name?: string | undefined;
    description?: string | undefined;
    hostSiteId?: string | undefined;
    scopes?: {
        user?: ("read" | "write")[] | undefined;
        env?: ("delete" | "read" | "write")[] | undefined;
        all?: boolean | undefined;
        site?: ("read" | "write")[] | undefined;
    } | undefined;
    use_cjs_shims?: boolean | undefined;
    ui?: {
        build?: {
            command?: string | undefined;
        } | undefined;
        dev?: {
            command?: string | undefined;
        } | undefined;
        surfaces?: Surfaces[] | undefined;
    } | undefined;
}, {
    slug: string;
    connector?: {
        "local-frontend"?: {
            port: number;
            command: string;
            directory: string;
        } | undefined;
    } | undefined;
    name?: string | undefined;
    description?: string | undefined;
    hostSiteId?: string | undefined;
    scopes?: {
        user?: ("read" | "write")[] | undefined;
        env?: ("delete" | "read" | "write")[] | undefined;
        all?: boolean | undefined;
        site?: ("read" | "write")[] | undefined;
    } | undefined;
    use_cjs_shims?: boolean | undefined;
    ui?: {
        build?: {
            command?: string | undefined;
        } | undefined;
        dev?: {
            command?: string | undefined;
        } | undefined;
        surfaces?: Surfaces[] | undefined;
    } | undefined;
}>;
export type ExtensionConfiguration = z.infer<typeof ExtensionConfigurationSchema>;
export declare const ExtensionConfigurationFileSchema: z.ZodObject<{
    config: z.ZodObject<{
        name: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        slug: z.ZodString;
        hostSiteId: z.ZodOptional<z.ZodString>;
        scopes: z.ZodOptional<z.ZodObject<{
            all: z.ZodOptional<z.ZodBoolean>;
            site: z.ZodOptional<z.ZodArray<z.ZodEnum<["read", "write"]>, "many">>;
            env: z.ZodOptional<z.ZodArray<z.ZodEnum<["read", "write", "delete"]>, "many">>;
            user: z.ZodOptional<z.ZodArray<z.ZodEnum<["read", "write"]>, "many">>;
        }, "strip", z.ZodTypeAny, {
            user?: ("read" | "write")[] | undefined;
            env?: ("delete" | "read" | "write")[] | undefined;
            all?: boolean | undefined;
            site?: ("read" | "write")[] | undefined;
        }, {
            user?: ("read" | "write")[] | undefined;
            env?: ("delete" | "read" | "write")[] | undefined;
            all?: boolean | undefined;
            site?: ("read" | "write")[] | undefined;
        }>>;
        use_cjs_shims: z.ZodOptional<z.ZodBoolean>;
        connector: z.ZodOptional<z.ZodObject<{
            "local-frontend": z.ZodOptional<z.ZodObject<{
                port: z.ZodNumber;
                command: z.ZodString;
                directory: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                port: number;
                command: string;
                directory: string;
            }, {
                port: number;
                command: string;
                directory: string;
            }>>;
        }, "strip", z.ZodTypeAny, {
            "local-frontend"?: {
                port: number;
                command: string;
                directory: string;
            } | undefined;
        }, {
            "local-frontend"?: {
                port: number;
                command: string;
                directory: string;
            } | undefined;
        }>>;
        ui: z.ZodOptional<z.ZodObject<{
            build: z.ZodOptional<z.ZodObject<{
                command: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                command?: string | undefined;
            }, {
                command?: string | undefined;
            }>>;
            dev: z.ZodOptional<z.ZodObject<{
                command: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                command?: string | undefined;
            }, {
                command?: string | undefined;
            }>>;
            surfaces: z.ZodOptional<z.ZodEffects<z.ZodArray<z.ZodNativeEnum<typeof Surfaces>, "many">, Surfaces[], Surfaces[]>>;
        }, "strip", z.ZodTypeAny, {
            build?: {
                command?: string | undefined;
            } | undefined;
            dev?: {
                command?: string | undefined;
            } | undefined;
            surfaces?: Surfaces[] | undefined;
        }, {
            build?: {
                command?: string | undefined;
            } | undefined;
            dev?: {
                command?: string | undefined;
            } | undefined;
            surfaces?: Surfaces[] | undefined;
        }>>;
    }, "strip", z.ZodTypeAny, {
        slug: string;
        connector?: {
            "local-frontend"?: {
                port: number;
                command: string;
                directory: string;
            } | undefined;
        } | undefined;
        name?: string | undefined;
        description?: string | undefined;
        hostSiteId?: string | undefined;
        scopes?: {
            user?: ("read" | "write")[] | undefined;
            env?: ("delete" | "read" | "write")[] | undefined;
            all?: boolean | undefined;
            site?: ("read" | "write")[] | undefined;
        } | undefined;
        use_cjs_shims?: boolean | undefined;
        ui?: {
            build?: {
                command?: string | undefined;
            } | undefined;
            dev?: {
                command?: string | undefined;
            } | undefined;
            surfaces?: Surfaces[] | undefined;
        } | undefined;
    }, {
        slug: string;
        connector?: {
            "local-frontend"?: {
                port: number;
                command: string;
                directory: string;
            } | undefined;
        } | undefined;
        name?: string | undefined;
        description?: string | undefined;
        hostSiteId?: string | undefined;
        scopes?: {
            user?: ("read" | "write")[] | undefined;
            env?: ("delete" | "read" | "write")[] | undefined;
            all?: boolean | undefined;
            site?: ("read" | "write")[] | undefined;
        } | undefined;
        use_cjs_shims?: boolean | undefined;
        ui?: {
            build?: {
                command?: string | undefined;
            } | undefined;
            dev?: {
                command?: string | undefined;
            } | undefined;
            surfaces?: Surfaces[] | undefined;
        } | undefined;
    }>;
}, "strip", z.ZodTypeAny, {
    config: {
        slug: string;
        connector?: {
            "local-frontend"?: {
                port: number;
                command: string;
                directory: string;
            } | undefined;
        } | undefined;
        name?: string | undefined;
        description?: string | undefined;
        hostSiteId?: string | undefined;
        scopes?: {
            user?: ("read" | "write")[] | undefined;
            env?: ("delete" | "read" | "write")[] | undefined;
            all?: boolean | undefined;
            site?: ("read" | "write")[] | undefined;
        } | undefined;
        use_cjs_shims?: boolean | undefined;
        ui?: {
            build?: {
                command?: string | undefined;
            } | undefined;
            dev?: {
                command?: string | undefined;
            } | undefined;
            surfaces?: Surfaces[] | undefined;
        } | undefined;
    };
}, {
    config: {
        slug: string;
        connector?: {
            "local-frontend"?: {
                port: number;
                command: string;
                directory: string;
            } | undefined;
        } | undefined;
        name?: string | undefined;
        description?: string | undefined;
        hostSiteId?: string | undefined;
        scopes?: {
            user?: ("read" | "write")[] | undefined;
            env?: ("delete" | "read" | "write")[] | undefined;
            all?: boolean | undefined;
            site?: ("read" | "write")[] | undefined;
        } | undefined;
        use_cjs_shims?: boolean | undefined;
        ui?: {
            build?: {
                command?: string | undefined;
            } | undefined;
            dev?: {
                command?: string | undefined;
            } | undefined;
            surfaces?: Surfaces[] | undefined;
        } | undefined;
    };
}>;
export type ExtensionConfigurationFile = z.infer<typeof ExtensionConfigurationFileSchema>;
//# sourceMappingURL=schema.d.ts.map