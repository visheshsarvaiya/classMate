import { DefaultValues } from 'react-hook-form';
import { z, ZodObject } from 'zod';
import { SmartFormFieldsMetadata } from '../SmartForm/common.ts';

export type ConnectFormProps<Schema extends ZodObject<any>> = {
    /**
     * A set of initial values used to pre-fill the form.
     */
    defaultValues?: DefaultValues<{
        name?: string | undefined;
        prefix?: string | undefined;
        config?: z.output<Schema> | undefined;
    }> | undefined;
    /**
     * A zod schema that defines additional metadata for the form fields.
     */
    fieldsMeta: SmartFormFieldsMetadata;
    /**
     * A callback function invoked when a user clicks the "Save" button.
     *
     * The submit button is not displayed by default; you must pass the `onSubmit` props for it to
     * appear.
     */
    onSubmit?: ((data: {
        name: string;
        prefix: string;
        config: z.output<Schema>;
    }) => Promise<void> | void) | undefined;
    /**
     * A zod schema that defines the shape of the form.
     *
     * Only ZodObject, ZodString, ZodBoolean, and ZodNumber are supported at this time.
     */
    schema: Schema;
};
/**
 * A `ConnectForm` wraps a `SmartForm` and adds common fields needed for a data source.
 *
 * For a component that wraps this component and handles form submissions use `ConnectedConnectForm`
 *
 * For an example @see {@link SmartForm}
 */
export declare const ConnectForm: <Schema extends ZodObject<any>>({ defaultValues, fieldsMeta, onSubmit, schema, }: ConnectFormProps<Schema>) => JSX.Element;
//# sourceMappingURL=ConnectForm.d.ts.map