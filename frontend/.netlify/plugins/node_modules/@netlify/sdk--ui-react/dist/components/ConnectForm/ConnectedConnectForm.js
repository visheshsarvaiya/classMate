import { jsx } from "react/jsx-runtime";
import { useCallback } from "react";
import { useNetlifySDK } from "../../use_netlify_sdk.js";
import { Card } from "../Card/main.js";
import { CardLoader } from "../CardLoader.js";
import { ConnectForm } from "./ConnectForm.js";
const ConnectedConnectForm = ({
  connect: _connect,
  ...otherProps
}) => {
  const connect = _connect;
  const sdk = useNetlifySDK();
  const query = connect.getConfig.useQuery(void 0, {
    enabled: sdk.context.configurationId !== null && sdk.context.dataLayerId !== null
  });
  const mutation = connect.upsertConfig.useMutation({
    onSuccess: () => {
      sdk.requestTermination();
    }
  });
  const onSubmit = useCallback(
    async (input) => {
      await mutation.mutateAsync(
        input
      );
    },
    [mutation]
  );
  if (query.isLoading) {
    return /* @__PURE__ */ jsx(CardLoader, {});
  }
  if (query.isError) {
    return /* @__PURE__ */ jsx(Card, { children: "An unexpected error occurred. Please try again." });
  }
  return /* @__PURE__ */ jsx(
    ConnectForm,
    {
      defaultValues: query.data,
      onSubmit,
      ...otherProps
    }
  );
};
export {
  ConnectedConnectForm
};
//# sourceMappingURL=ConnectedConnectForm.js.map
