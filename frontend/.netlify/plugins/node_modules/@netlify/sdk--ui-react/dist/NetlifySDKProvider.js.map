{"version":3,"file":"NetlifySDKProvider.js","sources":["../src/NetlifySDKProvider.tsx"],"sourcesContent":["import {\n  createMessageChannel,\n  createWindowMessageReader,\n  createWindowMessageWriter,\n  initializeSDK,\n  type MessageChannel,\n  type NetlifySDK,\n  type UIExtensionHostEvent,\n  UIExtensionHostEventSchema,\n  type UIExtensionSurfaceEvent,\n  withReaderTransform,\n} from \"@netlify/sdk--ui-core\";\nimport React, { createContext, useEffect, useMemo, useState } from \"react\";\nimport { Card } from \"./components/vendor/Card/main.js\";\nimport { ListLoader } from \"./components/vendor/ListLoader/ListLoader.jsx\";\n\nconst DefaultLoader = () => (\n  <Card>\n    <ListLoader />\n  </Card>\n);\n\nexport const NetlifySDKContext = createContext<{\n  _updateMarker: number;\n  sdk: NetlifySDK | null;\n}>({\n  _updateMarker: 0,\n  sdk: null,\n});\n\nexport interface NetlifySDKProviderProps {\n  children: React.ReactNode;\n  loader?: React.ReactNode | (() => React.JSX.Element) | undefined;\n  messageChannel?:\n    | MessageChannel<UIExtensionHostEvent, UIExtensionSurfaceEvent>\n    | undefined;\n  sdk?: NetlifySDK | undefined;\n}\n\nexport const NetlifySDKProvider = ({\n  children,\n  loader: Loader = DefaultLoader,\n  messageChannel: initialMessageChannel,\n  sdk: initialSDK,\n}: NetlifySDKProviderProps): React.JSX.Element => {\n  const [sdk, setSDK] = useState<NetlifySDK | null>(initialSDK ?? null);\n  const [updateMarker, setUpdateMarker] = useState<number>(0);\n\n  const [abortController] = useState(new AbortController());\n  useEffect(() => {\n    return () => {\n      abortController.abort();\n    };\n  }, [abortController]);\n\n  const messageChannel = useMemo<\n    MessageChannel<UIExtensionHostEvent, UIExtensionSurfaceEvent>\n  >(\n    () =>\n      initialMessageChannel ??\n      createMessageChannel(\n        withReaderTransform(\n          createWindowMessageReader({\n            signal: abortController.signal,\n            // TODO(ndhoule): Set these origins depending on the environment\n            isOriginPermitted: (origin: string) => {\n              // Allow from self (always safe, and useful in particular in testing environments)\n              if (origin === window.location.origin) {\n                return true;\n              }\n\n              let parsedOrigin: URL;\n              try {\n                parsedOrigin = new URL(origin);\n              } catch {\n                return false;\n              }\n\n              // Allow from the production Netlify app (and deploy previews)\n              if (\n                parsedOrigin.host.replace(/^deploy-preview-\\d+--/, \"\") ===\n                \"app.netlify.com\"\n              ) {\n                return true;\n              }\n\n              // Allow from the staging Netlify app (and deploy previews)\n              if (\n                parsedOrigin.host.replace(/^deploy-preview-\\d+--/, \"\") ===\n                \"app.netlifystg.com\"\n              ) {\n                return true;\n              }\n\n              // Allow from development Netlify app\n              if (parsedOrigin.host === \"localhost:8888\") {\n                return true;\n              }\n\n              return false;\n            },\n          }),\n          (message) => {\n            const result = UIExtensionHostEventSchema.safeParse(message);\n            return result.success ? result.data : null;\n          },\n        ),\n        createWindowMessageWriter({\n          signal: abortController.signal,\n          // TODO(ndhoule): Set the target origin depending on the environment\n          targetOrigin: \"*\",\n          targetWindow: window.parent,\n        }),\n      ),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [abortController.signal],\n  );\n\n  useEffect(() => {\n    if (sdk === null) {\n      // TODO(ndhoule): Handle explicit initialization errors; if we fail to initialize the SDK we\n      // should store that error and display an error screen.\n      // TODO(ndhoule): To handle cases where the host isn't responding properly, we should time this\n      // operation out (after ~5s?) and display an error. (Not sure yet if we should put the timeout\n      // here or in the initializeSDK method.)\n      void (async () => {\n        setSDK(await initializeSDK({ messageChannel }));\n      })();\n    }\n  }, [messageChannel, sdk, setSDK]);\n\n  // Observe the SDK for changes and update a marker value. (This marker value forces context\n  // consumers to calculate a re-render.)\n  useEffect(() => {\n    if (sdk === null) {\n      return;\n    }\n\n    return sdk.onChange(() => {\n      setUpdateMarker((marker) =>\n        marker === Number.MAX_SAFE_INTEGER ? 0 : marker + 1,\n      );\n    });\n  }, [sdk]);\n\n  if (sdk === null) {\n    if (typeof Loader === \"function\") {\n      return <Loader />;\n    }\n    // @ts-expect-error FIXME(ndhoule)\n    return Loader;\n  }\n\n  return (\n    <NetlifySDKContext.Provider value={{ sdk, _updateMarker: updateMarker }}>\n      {children}\n    </NetlifySDKContext.Provider>\n  );\n};\n"],"names":[],"mappings":";;;;;;AAgBA,MAAM,gBAAgB,MACpB,oBAAC,MACC,EAAA,UAAA,oBAAC,aAAW,CAAA,GACd;AAGK,MAAM,oBAAoB,cAG9B;AAAA,EACD,eAAe;AAAA,EACf,KAAK;AACP,CAAC;AAWM,MAAM,qBAAqB,CAAC;AAAA,EACjC;AAAA,EACA,QAAQ,SAAS;AAAA,EACjB,gBAAgB;AAAA,EAChB,KAAK;AACP,MAAkD;AAChD,QAAM,CAAC,KAAK,MAAM,IAAI,SAA4B,cAAc,IAAI;AACpE,QAAM,CAAC,cAAc,eAAe,IAAI,SAAiB,CAAC;AAE1D,QAAM,CAAC,eAAe,IAAI,SAAS,IAAI,iBAAiB;AACxD,YAAU,MAAM;AACd,WAAO,MAAM;AACX,sBAAgB,MAAM;AAAA,IACxB;AAAA,EAAA,GACC,CAAC,eAAe,CAAC;AAEpB,QAAM,iBAAiB;AAAA,IAGrB,MACE,yBACA;AAAA,MACE;AAAA,QACE,0BAA0B;AAAA,UACxB,QAAQ,gBAAgB;AAAA;AAAA,UAExB,mBAAmB,CAAC,WAAmB;AAEjC,gBAAA,WAAW,OAAO,SAAS,QAAQ;AAC9B,qBAAA;AAAA,YAAA;AAGL,gBAAA;AACA,gBAAA;AACa,6BAAA,IAAI,IAAI,MAAM;AAAA,YAAA,QACvB;AACC,qBAAA;AAAA,YAAA;AAIT,gBACE,aAAa,KAAK,QAAQ,yBAAyB,EAAE,MACrD,mBACA;AACO,qBAAA;AAAA,YAAA;AAIT,gBACE,aAAa,KAAK,QAAQ,yBAAyB,EAAE,MACrD,sBACA;AACO,qBAAA;AAAA,YAAA;AAIL,gBAAA,aAAa,SAAS,kBAAkB;AACnC,qBAAA;AAAA,YAAA;AAGF,mBAAA;AAAA,UAAA;AAAA,QACT,CACD;AAAA,QACD,CAAC,YAAY;AACL,gBAAA,SAAS,2BAA2B,UAAU,OAAO;AACpD,iBAAA,OAAO,UAAU,OAAO,OAAO;AAAA,QAAA;AAAA,MAE1C;AAAA,MACA,0BAA0B;AAAA,QACxB,QAAQ,gBAAgB;AAAA;AAAA,QAExB,cAAc;AAAA,QACd,cAAc,OAAO;AAAA,MACtB,CAAA;AAAA,IACH;AAAA;AAAA,IAEF,CAAC,gBAAgB,MAAM;AAAA,EACzB;AAEA,YAAU,MAAM;AACd,QAAI,QAAQ,MAAM;AAMhB,YAAM,YAAY;AAChB,eAAO,MAAM,cAAc,EAAE,eAAgB,CAAA,CAAC;AAAA,MAAA,GAC7C;AAAA,IAAA;AAAA,EAEJ,GAAA,CAAC,gBAAgB,KAAK,MAAM,CAAC;AAIhC,YAAU,MAAM;AACd,QAAI,QAAQ,MAAM;AAChB;AAAA,IAAA;AAGK,WAAA,IAAI,SAAS,MAAM;AACxB;AAAA,QAAgB,CAAC,WACf,WAAW,OAAO,mBAAmB,IAAI,SAAS;AAAA,MACpD;AAAA,IAAA,CACD;AAAA,EAAA,GACA,CAAC,GAAG,CAAC;AAER,MAAI,QAAQ,MAAM;AACZ,QAAA,OAAO,WAAW,YAAY;AAChC,iCAAQ,QAAO,EAAA;AAAA,IAAA;AAGV,WAAA;AAAA,EAAA;AAIP,SAAA,oBAAC,kBAAkB,UAAlB,EAA2B,OAAO,EAAE,KAAK,eAAe,gBACtD,UACH;AAEJ;"}